#version: '3.8'

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  database:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    volumes:
     # - ./db:/docker-entrypoint-initdb.d
      - ./dump.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./dump.sql
  meni:
    build:
      context: ./Meni
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - database
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    volumes:
      - ./Meni:/app # This assumes your server.js and package.json are directly in ./Meni
      - /app/node_modules # For node_modules inside the container
     # - ./backend:/app
     # - /app/node_modules

  odobrenje:
    build:
      context: ./Odobrenje_Narocila
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - database
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    volumes:
      - ./Odobrenje_Narocila:/app # This assumes your server.js and package.json are directly in ./Meni
      - /app/node_modules # For node_modules inside the container

  narocanje:
    build:
      context: ./Narocanje_jedi
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - database
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - GRPC_HOST=odobrenje
      - GRPC_PORT=50051

    volumes:
      - ./Narocanje_jedi:/app # This assumes your server.js and package.json are directly in ./Meni
      - /app/node_modules # For node_modules inside the container
      - ./Odobrenje_Narocila/proto:/app/external_proto # mount proto files





