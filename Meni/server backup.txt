const express = require('express')
const app = express()
const port = 3000
const cors = require("cors");
const mysql = require("mysql2");

app.use(cors())

const connection = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "artholus6*Databa5e",
    database: "smartpanda",
  });
  
    connection.connect(err => {
        if (err) {
        console.error('Error connecting to MySQL:', err);
        return;
        }
        console.log('Connected to MySQL database');
    });
  

  /*
  connection.query("SELECT * FROM jed", (err, rows, fields) => {
    if (err) {
      throw err;
      return;
    }
    console.log("Rows returned:", rows);
    //  console.log("The solution is: ", rows[0].solution);
  });*/
  


app.get('/', (req, res) => {
  res.send('Hello World!')
})
app.get('/meals', (req, res) => {
 console.log("FETCHING MEALS!:")

 connection.query("SELECT * FROM jed", (err, rows, fields) => {
    try{
    if (err) {
 
      throw err;
    }
    res.status(200).send({
        rows: rows
       }
       )
    }catch(e){
        return res.status(500).send('Database error');
    }
  });
  })

  app.get('/meals/:id', (req, res) => {

    id= req.params.id
    console.log("URL id: ||", id,"||")

   // id= JSON.stringify(req.params.id).replace(":","")
    
    connection.query("SELECT * FROM jed WHERE id="+id, (err, rows, fields) => {
        try{
        if (err) {
     
          throw err;
        }
        res.status(200).send({
            rows: rows
           }
           )
        }catch(e){
            return res.status(500).send('Database error');
        }
      });
  })



  app.get('/ingredients/:id', (req, res) => {

    id= req.params.id
    console.log("URL id: ||", id,"||")

    let queryString = `SELECT sestavina.ime,kalorije FROM sestavina JOIN jed_has_sestavina ON Sestavina_id = sestavina.id  JOIN jed ON jed.id=Jed_id WHERE Jed_id =${id}`;

    connection.query(queryString, (err, rows, fields) => {
        try{
        if (err) {
     
          throw err;
        }
        res.status(200).send({
            rows: rows
           }
           )
        }catch(e){
            return res.status(500).send('Database error');
        }
      });
  })

process.on('SIGINT', () => {
   console.log('Closing MySQL connection');
   connection.end(err => {
     if (err) console.error('Error during disconnection:', err);
     process.exit();
   });
 });

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})
